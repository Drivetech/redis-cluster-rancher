.catalog:
  name: "Redis Cluster"
  version: "v1.0.0"
  description: |
    Redis Sentinel Cluster
  questions:
    - variable: REDIS_VERSION
      type: enum
      options:
        - "4.0"
        - "3.2"
      required: true
      label: "Redis version"
    - variable: REDIS_PASSWORD
      type: string
      default: "mySecretPassword"
      required: true
      label: "Redis auth password"
    - variable: REDIS_HAPROXY_PORT
      type: int
      required: true
      default: 6379
      label: "Redis port"
    - variable: REDIS_SENTINEL_PORT
      type: int
      required: true
      default: 26379
      label: "Sentinel port"
    - variable: REDIS_MASTER_HOST_LABEL
      type: string
      required: true
      default: "redis=master"
      label: "Host label for master node"
    - variable: REDIS_SLAVE_HOST_LABEL
      type: string
      required: true
      default: "redis=slave"
      label: "Host label for slave node"
    - variable: REDIS_SENTINEL_HOST_LABEL
      type: string
      required: true
      default: "redis=sentinel"
      label: "Host label for sentinel and lb nodes"
    - variable: "VOLUME_DRIVER"
      label: "Volume Driver"
      required: true
      default: "rancher-ebs"
      type: enum
      options:
        - local
        - rancher-nfs
        - rancher-efs
        - rancher-ebs
    - variable: VOLUME_DRIVER_SIZE
      type: int
      required: false
      default: 10
      label: "Size of the EBS volume"
    - variable: VOLUME_DRIVER_TYPE
      type: string
      required: false
      default: "gp2"
      label: "Type of volume"
    - variable: VOLUME_DRIVER_AZ
      type: string
      required: false
      default: "us-east-1a"
      label: "The specific availability zone to create containers and EBS volume"
    - variable: VOLUME_DRIVER_IOPS
      type: int
      required: false
      default: 3000
      label: "IOPS option"

version: '2'
services:
  slave:
    scale: 1
    start_on_create: true
  sentinel:
    scale: 1
    start_on_create: true
  haproxy:
    scale: 1
    start_on_create: true
    lb_config:
      certs: []
      config: "default\n\tmode tcp\n\ttimeout connect 3s\n\ttimeout server 6s\n\t\
        timeout client 6s\n\nbackend 6379_\n\toption tcplog\n\toption tcp-check\n\t\
        tcp-check send AUTH\\ mySecretPassword\\r\\n\n\ttcp-check\
        \ expect string +OK\n\ttcp-check send PING\\r\\n\n\ttcp-check expect string\
        \ +PONG\n\ttcp-check send info\\ replication\\r\\n\n\ttcp-check expect string\
        \ role:master\n\ttcp-check send QUIT\\r\\n\n\ttcp-check expect string +OK"
      port_rules:
      - priority: 1
        protocol: tcp
        service: master
        source_port: 6379
        target_port: 6379
      - priority: 2
        protocol: tcp
        service: slave
        source_port: 6379
        target_port: 6379
    health_check:
      healthy_threshold: 2
      response_timeout: 2000
      port: 42
      unhealthy_threshold: 3
      initializing_timeout: 60000
      interval: 2000
      reinitializing_timeout: 60000
  master:
    scale: 1
    start_on_create: true
